name: Deploy to AWS Fargate

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 



      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1
      
      - name: Build, tag, and push Docker image to ECR
        run: |
          # Construir la imagen Docker y etiquetarla en un solo paso
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest .
          
          # Empujar la imagen construida al repositorio de ECR
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name: Update ECS service on Fargate
        run: |
          aws ecs update-service \
            --cluster deployFargate-cluster \
            --service testFargate-service \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}
            
      - name: Monitor ECS Service Deployment
        run: |
          echo "Supervisi贸n del despliegue del servicio ECS..."
          
          DEPLOYMENT_ID=$(aws ecs describe-services \ --cluster deployFargate-cluster \ --services testFargate-service \ --query 'services[0].deployments[?status==`PRIMARY`].id' \ --output text)
          echo "Seguimiento del despliegue con ID: $DEPLOYMENT_ID"
          
          while true; do
            CURRENT_ROLL_OUT_STATE=$(aws ecs describe-services \
              --cluster deployFargate-cluster \ --services testFargate-service \ --query 'services[0].deployments[0].rolloutState' \ --output text)
            echo "Estado actual del despliegue: $CURRENT_ROLL_OUT_STATE"
            
            # Si el rolloutState es IN_PROGRESS, monitoreamos hasta que cambie
            if [ "$CURRENT_ROLL_OUT_STATE" == "IN_PROGRESS" ]; then
              echo "Implementaci贸n en progreso, a la espera de que el estado cambie a COMPLETADO..."
              sleep 20
            elif [ "$CURRENT_ROLL_OUT_STATE" == "COMPLETED" ]; then
              echo "Implementaci贸n completada satisfactoriamente."
              break
            elif [ "$CURRENT_ROLL_OUT_STATE" == "FAILED" ]; then
              ERROR_MESSAGE=$(aws ecs describe-services \ --cluster deployFargate-cluster \ --services testFargate-service \ --query 'services[0].deployments[0].rolloutStateReason' \ --output text)
              echo "Implementaci贸n fallida. Error: $ERROR_MESSAGE"
              exit 1
            fi
          done
