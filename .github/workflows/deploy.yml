name: Deploy to AWS Fargate

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 



      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1
      
      - name: Build, tag, and push Docker image to ECR
        run: |
          # Construir la imagen Docker y etiquetarla en un solo paso
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest .
          
          # Empujar la imagen construida al repositorio de ECR
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      # Actualizar el servicio de ECS para hacer un despliegue con la nueva imagen
      - name: Update ECS service on Fargate
        run: |
          aws ecs update-service \
            --cluster deployFargate-cluster \
            --service testFargate-service \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}

      - name: Verificar estado del despliegue en Fargate
        run: |
          echo "Esperando a que el nuevo servicio inicie..."
          
          # Bucle para verificar el estado de las tareas pendientes
          TASK_PENDING=true
          while [ "$TASK_PENDING" == "true" ]; do
            # Obtener la última tarea pendiente
            CURRENT_TASK_ID=$(aws ecs list-tasks --cluster deployFargate-cluster --service-name testFargate-service --desired-status PENDING --query "taskArns[-1]" --output text)
            
            # Si el ID no es "None", significa que la tarea está pendiente
            if [ "$CURRENT_TASK_ID" != "None" ]; then
              TASK_PENDING=false
              echo "La tarea pendiente encontrada: $CURRENT_TASK_ID"
            else
              echo "No se encontraron tareas pendientes, esperando 2 segundos..."
              sleep 2  # Espera 2 segundos antes de volver a verificar
            fi
          done
