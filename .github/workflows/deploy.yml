name: Deploy to AWS Fargate

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 



      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1
      
      - name: Build, tag, and push Docker image to ECR
        run: |
          # Construir la imagen Docker y etiquetarla en un solo paso
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest .
          
          # Empujar la imagen construida al repositorio de ECR
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      # Actualizar el servicio de ECS para hacer un despliegue con la nueva imagen
      - name: Update ECS service on Fargate
        run: |
          aws ecs update-service \
            --cluster deployFargate-cluster \
            --service testFargate-service \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}

      - name: Monitor service deployment status
        run: |
          # Monitorear la implementación hasta que esté en estado COMPLETED
          until [ "$(aws ecs describe-services \
                    --cluster your-cluster-name \
                    --services your-service-name \
                    --query 'services[0].deployments[0].status' \
                    --output text)" == "PRIMARY" ]; do
            echo "Waiting for deployment to complete..."
            sleep 30
          done
          echo "Deployment completed successfully."

      - name: Monitor service deployment status
        run: |
          # Inicializamos el monitoreo de la implementación
          DEPLOYMENT_ID=$(aws ecs describe-services \
            --cluster deployFargate-cluster \
            --services 	testFargate-service \
            --query 'services[0].deployments[0].id' \
            --output text)
          echo "Monitoring deployment with ID: $DEPLOYMENT_ID"
          
          # Monitorear el estado de la implementación hasta que se complete
          until [ "$(aws ecs describe-services \
                    --cluster deployFargate-cluster \
                    --services 	testFargate-service \
                    --query 'services[0].deployments[0].status' \
                    --output text)" == "PRIMARY" ]; do
            CURRENT_STATUS=$(aws ecs describe-services \
              --cluster deployFargate-cluster \
              --services 	testFargate-service \
              --query 'services[0].deployments[0].status' \
              --output text)
            echo "Current deployment status: $CURRENT_STATUS"
            echo "Waiting for deployment to complete..."
            sleep 5
          done
          
          echo "Deployment completed successfully. Deployment ID: $DEPLOYMENT_ID"
